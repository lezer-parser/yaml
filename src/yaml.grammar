@top Stream { Document? (DocEnd Document?)* }

Document {
  Directive* DirectiveEnd? element+ |
  Directive+ DirectiveEnd? element*
}

element {
  elementAtom |
  BlockSequence |
  BlockMapping |
  Reference |
  TypedElement { TypeTag element } |
  NamedElement { NameTag element }
}

elementAtom {
  QuotedLiteral |
  Literal |
  FlowSequence |
  FlowMapping
}

FlowSequence { "[" (elementAtom ",")* elementAtom? "]" }
FlowMapping { "{" (elementAtom ":" elementAtom ",")* elementAtom? "}" }

BlockSequence {
  (sequenceStartMark element?)
  (sequenceContinueMark element?)*
  blockEnd
}

BlockMapping {
  "@FIXME" //  (("@KEY" | "?" elementAtom?) ":" element?)+ dedent
}

@skip { whitespace | linebreak | Comment }

@context indentation from "./tokens.js"

@external tokens newlines from "./tokens.js" {
  blockEnd,
  DirectiveEnd,
  DocEnd
}

@external tokens sequence from "./tokens.js" {
  sequenceStartMark[@name="-"]
  sequenceContinueMark[@name="-"]
}

@tokens {
  whitespace { $[ \t]+ }
  linebreak { $[\n\r] }
  QuotedLiteral {
    '"' (!["\\] | "\\" _)* '"'? |
    "'" (!['] | "''")* "'"?
  }
  Directive { "%" ![\n]* }
  Comment { "#" ![\n]* }

  anchorChar { $[!-+\--Z\\^-z|~\u00a0-\ud7ff\ue000-\ufffd\u{10000}-\u{10ffff}] }
  Reference { "*" anchorChar+ }
  NameTag { "&" anchorChar+ }
  TypeTag { "!" (anchorChar* "!")? anchorChar+ }

  safe { ![-?:,\[\]{}#&*!|>'"%@` \t\r\n] }

  Literal { safe ($[ \t]* safe)* } // FIXME

  "["[@export=BracketL] "]"
  "{"[@export=BraceL] "}"
}

@detectDelim
